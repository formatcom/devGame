// Generated by CoffeeScript 1.10.0
(function() {
  var BASE, Block, SUPPORT_IMMUTABLE, SUPPORT_MUTABLE, i, j, len, len1, prop;

  Block = function(entity) {
    if (entity == null) {
      entity = [];
    }
    this._entities = entity.json ? entity.json() : entity;
    return this;
  };

  BASE = function(_prop, _immutable) {
    if (_immutable == null) {
      _immutable = false;
    }
    return function() {
      if (_immutable) {
        return new Block(this._entities[_prop].apply(this._entities, arguments));
      } else {
        return this._entities[_prop].apply(this._entities, arguments);
      }
    };
  };

  SUPPORT_MUTABLE = ['push', 'unshift', 'pop', 'splice', 'sort', 'reverse'];

  SUPPORT_IMMUTABLE = ['concat', 'map', 'filter', 'forEach'];

  for (i = 0, len = SUPPORT_MUTABLE.length; i < len; i++) {
    prop = SUPPORT_MUTABLE[i];
    Block.prototype[prop] = BASE(prop);
  }

  for (j = 0, len1 = SUPPORT_IMMUTABLE.length; j < len1; j++) {
    prop = SUPPORT_IMMUTABLE[j];
    Block.prototype[prop] = BASE(prop, true);
  }

  Block.prototype.json = Block.prototype.all = function() {
    return this._entities;
  };

  Block.prototype.add = function() {
    return this._entities.push.apply(this._entities, arguments);
  };

  Block.prototype.length = function() {
    return this._entities.length;
  };

  Block.prototype.clear = function() {
    return this._entities = [];
  };

  module.exports = Block;

}).call(this);
